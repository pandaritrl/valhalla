[build-system]
requires = [
    "setuptools>=45",
    "wheel",
    "setuptools_scm>=6.2",
    "setuptools_scm_git_archive",
    "pybind11>=2.10.4",
]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
version_file = "src/bindings/python/valhalla/__version__.py"
write_to_template = "__version__ = '{version}'\n"
version_scheme = "post-release"
# PyPI doesn't accept local hashed version strings, important for pyvalhalla-git
local_scheme = "no-local-version"

[tool.black]
line-length = 105
skip-string-normalization = true
exclude = '''
/(
    \\..*
  | dist
  | wheelhouse
  | '*build'
  | __pycache__
  | '*.toml'

)/
'''

[tool.cibuildwheel]
# it's enough here to know it's importable, actual test is run on other CI
# mostly to avoid building utrecht tiles within the bindings build
test-command = "python -c \"from valhalla import Actor\""
# find out current defaults: cibuildwheel --print-build-identifiers --platform linux
build = "cp*"
skip = "*musllinux*"
archs = "native"
manylinux-x86_64-image = "ghcr.io/valhalla/manylinux:2_28_valhalla_python"

[tool.cibuildwheel.windows]
before-all = "pip install conan delvewheel"
repair-wheel-command = "delvewheel repair --add-path {project}/build/vcpkg_installed/custom-x64-windows/bin {wheel} -w {dest_dir}"

[tool.cibuildwheel.linux]
# build & install libvalhalla before building the bindings
before-all = """
{project}/src/bindings/python/build_linux.sh build_manylinux
"""

[tool.cibuildwheel.macos]
environment = { LIBRARY_PATH="/opt/homebrew/lib:$LIBRARY_PATH" }
repair-wheel-command = [
    'DYLD_LIBRARY_PATH=$LIBRARY_PATH delocate-listdeps {wheel}',
    'DYLD_LIBRARY_PATH=$LIBRARY_PATH delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}'
]
