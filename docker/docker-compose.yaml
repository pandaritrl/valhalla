services:
  valhalla:
    image: ghcr.io/valhalla/valhalla-scripted:latest
    # Fallback to building from source if image not available
    # build:
    #   context: ..
    #   dockerfile: docker/Dockerfile-scripted
    container_name: valhalla
    ports:
      - "8002:8002"
    volumes:
      # Main data directory - maps to /custom_files in container
      - ./data:/custom_files
      # Optional: GTFS feeds for transit routing
      - ./gtfs_feeds:/gtfs_feeds
    environment:
      # Core configuration
      - use_tiles_ignore_pbf=True
      - build_tar=True
      - serve_tiles=True
      - update_existing_config=True
      - force_rebuild=False
      - path_extension=
      
      # Data sources
      - tile_urls=https://download.geofabrik.de/europe/andorra-latest.osm.pbf
      # - tile_urls=https://download.geofabrik.de/north-america-latest.osm.pbf
      
      # Build options
      - build_admins=True
      - build_time_zones=True
      - build_elevation=False
      - build_transit=False
      
      # Performance settings
      - server_threads=4
      - use_default_speeds_config=True
      - default_speeds_config_url=https://raw.githubusercontent.com/OpenStreetMapSpeeds/schema/master/default_speeds.json
      
      # File naming
      - tileset_name=valhalla_tiles
      - traffic_name=""
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - valhalla-network

  # Optional: Nginx reverse proxy for production use
  nginx:
    image: nginx:alpine
    container_name: valhalla-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - valhalla
    restart: unless-stopped
    networks:
      - valhalla-network
    profiles:
      - production

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: valhalla-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - valhalla-network
    profiles:
      - monitoring

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: valhalla-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    networks:
      - valhalla-network
    profiles:
      - monitoring

networks:
  valhalla-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
